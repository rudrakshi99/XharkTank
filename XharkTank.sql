-- Database: xharktank

CREATE DATABASE xharktank
WITH
    OWNER = admin ENCODING = 'UTF8' LC_COLLATE = 'en_IN' LC_CTYPE = 'en_IN' TABLESPACE = pg_default CONNECTION
LIMIT = -1 IS_TEMPLATE = False;

-- This script was generated by a beta version of the ERD tool in pgAdmin 4.

-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.

BEGIN;

CREATE TABLE
    IF NOT EXISTS public.auth_group (
        id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (
            INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1
        ),
        name character varying(150) COLLATE pg_catalog."default" NOT NULL,
        CONSTRAINT auth_group_pkey PRIMARY KEY (id),
        CONSTRAINT auth_group_name_key UNIQUE (name)
    );

CREATE TABLE
    IF NOT EXISTS public.auth_group_permissions (
        id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
            INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
        ),
        group_id integer NOT NULL,
        permission_id integer NOT NULL,
        CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id),
        CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id)
    );

CREATE TABLE
    IF NOT EXISTS public.auth_permission (
        id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (
            INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1
        ),
        name character varying(255) COLLATE pg_catalog."default" NOT NULL,
        content_type_id integer NOT NULL,
        codename character varying(100) COLLATE pg_catalog."default" NOT NULL,
        CONSTRAINT auth_permission_pkey PRIMARY KEY (id),
        CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename)
    );

CREATE TABLE
    IF NOT EXISTS public.auth_user (
        id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (
            INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1
        ),
        password character varying(128) COLLATE pg_catalog."default" NOT NULL,
        last_login timestamp
        with
            time zone,
            is_superuser boolean NOT NULL,
            username character varying(150) COLLATE pg_catalog."default" NOT NULL,
            first_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
            last_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
            email character varying(254) COLLATE pg_catalog."default" NOT NULL,
            is_staff boolean NOT NULL,
            is_active boolean NOT NULL,
            date_joined timestamp
        with
            time zone NOT NULL,
            CONSTRAINT auth_user_pkey PRIMARY KEY (id),
            CONSTRAINT auth_user_username_key UNIQUE (username)
    );

CREATE TABLE
    IF NOT EXISTS public.auth_user_groups (
        id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
            INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
        ),
        user_id integer NOT NULL,
        group_id integer NOT NULL,
        CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id),
        CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id)
    );

CREATE TABLE
    IF NOT EXISTS public.auth_user_user_permissions (
        id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
            INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
        ),
        user_id integer NOT NULL,
        permission_id integer NOT NULL,
        CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id),
        CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id)
    );

CREATE TABLE
    IF NOT EXISTS public.django_admin_log (
        id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (
            INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1
        ),
        action_time timestamp
        with
            time zone NOT NULL,
            object_id text COLLATE pg_catalog."default",
            object_repr character varying(200) COLLATE pg_catalog."default" NOT NULL,
            action_flag smallint NOT NULL,
            change_message text COLLATE pg_catalog."default" NOT NULL,
            content_type_id integer,
            user_id integer NOT NULL,
            CONSTRAINT django_admin_log_pkey PRIMARY KEY (id)
    );

CREATE TABLE
    IF NOT EXISTS public.django_content_type (
        id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (
            INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1
        ),
        app_label character varying(100) COLLATE pg_catalog."default" NOT NULL,
        model character varying(100) COLLATE pg_catalog."default" NOT NULL,
        CONSTRAINT django_content_type_pkey PRIMARY KEY (id),
        CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model)
    );

CREATE TABLE
    IF NOT EXISTS public.django_migrations (
        id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
            INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
        ),
        app character varying(255) COLLATE pg_catalog."default" NOT NULL,
        name character varying(255) COLLATE pg_catalog."default" NOT NULL,
        applied timestamp
        with
            time zone NOT NULL,
            CONSTRAINT django_migrations_pkey PRIMARY KEY (id)
    );

CREATE TABLE
    IF NOT EXISTS public.django_session (
        session_key character varying(40) COLLATE pg_catalog."default" NOT NULL,
        session_data text COLLATE pg_catalog."default" NOT NULL,
        expire_date timestamp
        with
            time zone NOT NULL,
            CONSTRAINT django_session_pkey PRIMARY KEY (session_key)
    );

CREATE TABLE
    IF NOT EXISTS public.entrepreneur_entrepreneur (
        id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
            INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
        ),
        entrepreneur character varying(100) COLLATE pg_catalog."default" NOT NULL,
        "pitchTitle" character varying(100) COLLATE pg_catalog."default" NOT NULL,
        "pitchIdea" text COLLATE pg_catalog."default" NOT NULL,
        "askAmount" double precision NOT NULL,
        equity double precision NOT NULL,
        created_at timestamp
        with
            time zone NOT NULL,
            updated_at timestamp
        with
            time zone NOT NULL,
            CONSTRAINT entrepreneur_entrepreneur_pkey PRIMARY KEY (id)
    );

CREATE TABLE
    IF NOT EXISTS public.entrepreneur_entrepreneur_offers (
        id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
            INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
        ),
        entrepreneur_id bigint NOT NULL,
        investor_id bigint NOT NULL,
        CONSTRAINT entrepreneur_entrepreneur_offers_pkey PRIMARY KEY (id),
        CONSTRAINT entrepreneur_entrepreneu_entrepreneur_id_investor_92ae63ca_uniq UNIQUE (entrepreneur_id, investor_id)
    );

CREATE TABLE
    IF NOT EXISTS public.investor_investor (
        id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
            INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1
        ),
        investor character varying(100) COLLATE pg_catalog."default" NOT NULL,
        amount double precision NOT NULL,
        equity double precision NOT NULL,
        comment text COLLATE pg_catalog."default" NOT NULL,
        created_at timestamp
        with
            time zone NOT NULL,
            updated_at timestamp
        with
            time zone NOT NULL,
            CONSTRAINT investor_investor_pkey PRIMARY KEY (id)
    );

ALTER TABLE
    IF EXISTS public.auth_group_permissions
ADD
    CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

CREATE INDEX
    IF NOT EXISTS auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions(permission_id);

ALTER TABLE
    IF EXISTS public.auth_group_permissions
ADD
    CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

CREATE INDEX
    IF NOT EXISTS auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions(group_id);

ALTER TABLE
    IF EXISTS public.auth_permission
ADD
    CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

CREATE INDEX
    IF NOT EXISTS auth_permission_content_type_id_2f476e4b ON public.auth_permission(content_type_id);

ALTER TABLE
    IF EXISTS public.auth_user_groups
ADD
    CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

CREATE INDEX
    IF NOT EXISTS auth_user_groups_group_id_97559544 ON public.auth_user_groups(group_id);

ALTER TABLE
    IF EXISTS public.auth_user_groups
ADD
    CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

CREATE INDEX
    IF NOT EXISTS auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups(user_id);

ALTER TABLE
    IF EXISTS public.auth_user_user_permissions
ADD
    CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

CREATE INDEX
    IF NOT EXISTS auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions(permission_id);

ALTER TABLE
    IF EXISTS public.auth_user_user_permissions
ADD
    CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

CREATE INDEX
    IF NOT EXISTS auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions(user_id);

ALTER TABLE
    IF EXISTS public.django_admin_log
ADD
    CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

CREATE INDEX
    IF NOT EXISTS django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log(content_type_id);

ALTER TABLE
    IF EXISTS public.django_admin_log
ADD
    CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

CREATE INDEX
    IF NOT EXISTS django_admin_log_user_id_c564eba6 ON public.django_admin_log(user_id);

ALTER TABLE
    IF EXISTS public.entrepreneur_entrepreneur_offers
ADD
    CONSTRAINT entrepreneur_entrepr_entrepreneur_id_ed9b90a8_fk_entrepren FOREIGN KEY (entrepreneur_id) REFERENCES public.entrepreneur_entrepreneur (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

CREATE INDEX
    IF NOT EXISTS entrepreneur_entrepreneur_offers_entrepreneur_id_ed9b90a8 ON public.entrepreneur_entrepreneur_offers(entrepreneur_id);

ALTER TABLE
    IF EXISTS public.entrepreneur_entrepreneur_offers
ADD
    CONSTRAINT entrepreneur_entrepr_investor_id_8ba2a94d_fk_investor_ FOREIGN KEY (investor_id) REFERENCES public.investor_investor (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;

CREATE INDEX
    IF NOT EXISTS entrepreneur_entrepreneur_offers_investor_id_8ba2a94d ON public.entrepreneur_entrepreneur_offers(investor_id);

END;